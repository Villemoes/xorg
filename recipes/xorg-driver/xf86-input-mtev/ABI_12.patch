--- xf86-input-mtev/src/multitouch.c.old	2012-05-22 11:41:58.743714761 +0200
+++ xf86-input-mtev/src/multitouch.c	2012-05-22 14:30:46.826606116 +0200
@@ -114,7 +114,7 @@
 	return Success;
 }
 
-static int device_init(DeviceIntPtr dev, LocalDevicePtr local)
+static int device_init(DeviceIntPtr dev, InputInfoPtr local)
 {
 	struct mtev_mtouch *mt = local->private;
 	Atom atom;
@@ -208,7 +208,7 @@
 			xf86InitValuatorAxisStruct(dev, val, axes_labels[val],
 						   min,
 						   max,
-						   1, 0, 1);
+						   1, 0, 1, Absolute);
 			xf86InitValuatorDefaults(dev, val);
 		}
 	}
@@ -218,7 +218,7 @@
 	return Success;
 }
 
-static int device_on(LocalDevicePtr local)
+static int device_on(InputInfoPtr local)
 {
 	struct mtev_mtouch *mt = local->private;
 	local->fd = xf86OpenSerial(local->options);
@@ -234,7 +234,7 @@
 	return Success;
 }
 
-static int device_off(LocalDevicePtr local)
+static int device_off(InputInfoPtr local)
 {
 	struct mtev_mtouch *mt = local->private;
 	xf86RemoveEnabledDevice(local);
@@ -245,12 +245,12 @@
 	return Success;
 }
 
-static int device_close(LocalDevicePtr local)
+static int device_close(InputInfoPtr local)
 {
 	return Success;
 }
 
-static void process_state(LocalDevicePtr local,
+static void process_state(InputInfoPtr local,
 			  const struct mtev_mtouch *mt)
 {
 
@@ -305,7 +305,7 @@
 }
 
 /* called for each full received packet from the touchpad */
-static void read_input(LocalDevicePtr local)
+static void read_input(InputInfoPtr local)
 {
 	struct mtev_mtouch *mt = local->private;
 	while (mtouch_read_synchronized_event(mt, local->fd)) {
@@ -315,7 +315,7 @@
 
 static Bool device_control(DeviceIntPtr dev, int mode)
 {
-	LocalDevicePtr local = dev->public.devicePrivate;
+	InputInfoPtr local = dev->public.devicePrivate;
 	switch (mode) {
 	case DEVICE_INIT:
 		xf86Msg(X_INFO, "device control: init\n");
@@ -335,41 +335,29 @@
 	}
 }
 
-static InputInfoPtr preinit(InputDriverPtr drv, IDevPtr dev, int flags)
+static int preinit(InputDriverPtr drv, InputInfoPtr pInfo, int flags)
 {
 	struct mtev_mtouch *mt;
-	InputInfoPtr local = xf86AllocateInput(drv, 0);
-	if (!local)
+	int rc = BadAlloc;
+
+	if (!pInfo)
 		goto error;
 	mt = calloc(1, sizeof(struct mtev_mtouch));
 	if (!mt)
 		goto error;
 
-	local->name = dev->identifier;
-	local->type_name = XI_TOUCHSCREEN;
-	local->device_control = device_control;
-	local->read_input = read_input;
-	local->private = mt;
-	local->flags = XI86_POINTER_CAPABLE |
-		XI86_SEND_DRAG_EVENTS;
-
-	local->conf_idev = dev;
-
-	xf86CollectInputOptions(local, NULL, NULL);
-	//xf86OptionListReport(local->options);
-	xf86ProcessCommonOptions(local, local->options);
+	pInfo->type_name = XI_TOUCHSCREEN;
+	pInfo->device_control = device_control;
+	pInfo->read_input = read_input;
+	pInfo->private = mt;
 
-	local->flags |= XI86_CONFIGURED;
+	xf86CollectInputOptions(pInfo, NULL);
+	xf86ProcessCommonOptions(pInfo, pInfo->options);
+	
+	return Success;
 
 error:
-	return local;
-}
-
-static void uninit(InputDriverPtr drv, InputInfoPtr local, int flags)
-{
-	free(local->private);
-	local->private = NULL;
-	xf86DeleteInput(local, 0);
+	return rc;
 }
 
 static InputDriverRec MTEV = {
@@ -377,9 +365,8 @@
 	.driverName = "mtev",
 	.Identify = NULL,
 	.PreInit = preinit,
-	.UnInit = uninit,
+	.UnInit = NULL,
 	.module = NULL,
-	.refCount = 0
 };
 
 static XF86ModuleVersionInfo VERSION = {
